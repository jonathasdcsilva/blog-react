{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/src/components/Container/index.tsx"],"sourcesContent":["type ContainerProps = {\n  children: React.ReactNode\n}\nexport function Container({ children }: ContainerProps) {\n  return (\n    <div className='text-slate-900 bg-slate-100 min-h-screen'>\n      <div className='max-w-screen-lg mx-auto px-8'>\n        { children }\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGO,SAAS,UAAU,EAAE,QAAQ,EAAkB;IACpD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACX;;;;;;;;;;;AAIV","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/src/repositories/post/json-post-repository.ts"],"sourcesContent":["import { PostModel } from '@/models/post/post-model';\nimport { PostRepository } from './post-repository';\nimport { resolve } from 'path';\nimport { readFile } from 'fs/promises';\n\nconst ROOT_DIR = process.cwd();\nconst JSON_POSTS_FILE_PATH = resolve(ROOT_DIR, 'src', 'db', 'seed', 'posts.json');\nconst SIMULATE_WAIT_IN_MS = 0;\n\nexport class JsonPostRepository implements PostRepository {\n\n  private async simulateWait() {\n    if (SIMULATE_WAIT_IN_MS <= 0) return;\n\n    await new Promise(resolve => setTimeout(resolve, SIMULATE_WAIT_IN_MS));\n  }\n\n  private async readFromDisk(): Promise<PostModel[]> {\n    const jsonContent = await readFile(JSON_POSTS_FILE_PATH, 'utf-8');\n    const jsonParsed = JSON.parse(jsonContent);\n    const { posts } = jsonParsed;\n    return posts;\n  }\n\n  async findAll(): Promise<PostModel[]> {\n    await this.simulateWait();\n    const posts = await this.readFromDisk();\n    return posts;\n  }\n\n  async findById(id: string): Promise<PostModel> {\n    const posts = await this.findAll();\n    const post = posts.find(post => post.id === id);\n    if(!post) {\n      throw new Error(\"Post não encontrado.\");\n    }\n    return post;\n  }\n}"],"names":[],"mappings":";;;AAEA;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG;AAC5B,MAAM,uBAAuB,CAAA,GAAA,iGAAA,CAAA,UAAO,AAAD,EAAE,UAAU,OAAO,MAAM,QAAQ;AACpE,MAAM,sBAAsB;AAErB,MAAM;IAEX,MAAc,eAAe;QAC3B,IAAI,uBAAuB,GAAG;QAE9B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACnD;IAEA,MAAc,eAAqC;QACjD,MAAM,cAAc,MAAM,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD,EAAE,sBAAsB;QACzD,MAAM,aAAa,KAAK,KAAK,CAAC;QAC9B,MAAM,EAAE,KAAK,EAAE,GAAG;QAClB,OAAO;IACT;IAEA,MAAM,UAAgC;QACpC,MAAM,IAAI,CAAC,YAAY;QACvB,MAAM,QAAQ,MAAM,IAAI,CAAC,YAAY;QACrC,OAAO;IACT;IAEA,MAAM,SAAS,EAAU,EAAsB;QAC7C,MAAM,QAAQ,MAAM,IAAI,CAAC,OAAO;QAChC,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QAC5C,IAAG,CAAC,MAAM;YACR,MAAM,IAAI,MAAM;QAClB;QACA,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/src/repositories/post/index.ts"],"sourcesContent":["import { JsonPostRepository } from './json-post-repository';\nimport { PostRepository } from './post-repository';\n\nexport const postRepository: PostRepository = new JsonPostRepository();"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiC,IAAI,yJAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/src/components/PostsList/index.tsx"],"sourcesContent":["import { postRepository } from '@/repositories/post';\n\nexport async function PostsList() {\n  const posts = await postRepository.findAll();\n  return (\n    <div>\n      {posts.map(post => {\n        return <p key={post.id}>{post.title}</p>\n      })}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,oIAAA,CAAA,iBAAc,CAAC,OAAO;IAC1C,qBACE,8OAAC;kBACE,MAAM,GAAG,CAAC,CAAA;YACT,qBAAO,8OAAC;0BAAiB,KAAK,KAAK;eAApB,KAAK,EAAE;;;;;QACxB;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/src/app/page.tsx"],"sourcesContent":["import { Container } from '@/components/Container';\nimport { PostsList } from '@/components/PostsList';\nimport { SpinLoader } from '@/components/SpinLoader';\nimport { Suspense } from 'react'\n\nexport default async function HomePage() {\n\n  return (\n    <Container>\n        <header>\n          <h1 className='text-6xl font-bold text-center py-8'>\n            Aqui é a header\n          </h1>\n        </header>\n        <Suspense fallback={<SpinLoader />}>\n          <PostsList />\n        </Suspense>\n        <footer>\n          <p className='text-6xl font-bold text-center py-8'>Aqui é a footer</p>\n        </footer>\n    </Container>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAE5B,qBACE,8OAAC,wIAAA,CAAA,YAAS;;0BACN,8OAAC;0BACC,cAAA,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;;;;;;0BAItD,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC,yIAAA,CAAA,aAAU;;;;;0BAC7B,cAAA,8OAAC,wIAAA,CAAA,YAAS;;;;;;;;;;0BAEZ,8OAAC;0BACC,cAAA,8OAAC;oBAAE,WAAU;8BAAsC;;;;;;;;;;;;;;;;;AAI7D","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///C:/Estudo/React/blog/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAMhG,8BAA8B;IAI5BI,SAASC;;;;;;;;;;;;;AAIX,cAAc,0CAA0C,iBAAA;IAAE,MAAA,kBAAwB;AAAsB,EAAC,IAAA,OAAA;IAAA;IAAA;QAEzG,YAAA;YAAA;YAAA,CACA,kCAD4D;YAC5D,IAAO,MAAMG,cAAc,IAAIX,mBAAmB;kBAChDY,QAAAA,CAAAA,CAAY;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACVC,MAAMZ,UAAUa,QAAQ;;SACxBC,MAAM;cACNC,IAAAA;YAAAA,CAAU,KAAA;iBACV,MAAA,QAAA;wBAAA,0BAA2C;4BAC3CC,KAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,OAAY,eAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACZC,OAAAA,GAAU,wTAAA,CAAA,KAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACVC,MAAAA,CAAAA,GAAU,EAAE,OAAA,CAAA;wBACd;qBAAA;aACAC,SAAU;;UACRC,QAAAA;YAAAA,GAAYnB,CAAAA;YAAAA;SAAAA;UACd,SAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0],"debugId":null}}]
}